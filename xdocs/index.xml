<?xml version="1.0"?>
<!-- 
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 -->

<document>

 <properties>
  <title>Commons</title>
  <author email="dev@commons.apache.org">Commons Documentation Team</author>
 </properties>

 <body>

<section name="The Modeler Component">

<p>Java Management Extensions (JMX) is an API that facilitates building
management applications that can configure, and perform operations on, a
server application.  In general, each manageable component of the server
application is represented by a <em>Management Bean</em> (or MBean, for
short).  JMX defines three types of MBeans, of which <em>Model MBeans</em>
are the most flexible.  Model MBeans provide a way to define MBeans for
many different components, without having to write a specific MBean
implementation class for each one.</p>

<p>However, this power comes at a price.  It is necessary to set up a
substantial amount of metadata about each MBean, including the attributes
it should expose (similar to JavaBeans properties), the operations it should
make available (similar to calling methods of a Java object via reflection),
and other related information.  The <em>Modeler</em> component is designed to
make this process fairly painless -- the required metadata is configured from
an XML description of each Model MBean to be supported.  In addition,
Modeler provides a factory mechanism to create the actual Model MBean instances
themselves.</p>

<p>For further information, see the 
<a href="apidocs/org/apache/commons/modeler/package-summary.html"> package description</a> 
for the Modeler package.</p>

</section>


<section name="Releases">
    <p>
       See the <a href="downloads.html">downloads</a> page for information on obtaining releases.
    </p>
<br/>
</section>

<section name="Documentation">
  <p>
     The <a href="apidocs/index.html">JavaDoc API documents</a> are available online.
  </p>
</section>

</body>
</document>
